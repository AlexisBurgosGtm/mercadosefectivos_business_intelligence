{"version":3,"sources":["funciones.js","partials/partialLoading.js","views/Graficas/cardsEmpresas.js","views/Graficas/graficaEmpresas.js","views/Graficas/graficaMarcas.js","views/Graficas/graficaEmpresasFacDev.js","views/viewInicio.js","views/viewLogin.js","partials/ButtonHome.js","views/viewAnalisisEmpresa.js","views/viewAnalisisMarcas.js","Navegar.js","reportWebVitals.js","index.js"],"names":["funciones","rand","Math","floor","random","getApiUrl","setMoneda","num","signo","toString","replace","isNaN","sign","abs","cents","i","length","substring","setPorcentaje","hablar","msn","utterance","SpeechSynthesisUtterance","window","speechSynthesis","speak","FiltrarTabla","idTabla","idfiltro","tableReg","document","getElementById","searchText","value","toLowerCase","cellsOfRow","found","compareWith","rows","getElementsByTagName","j","innerHTML","indexOf","style","display","OcultarRows","ObtenerUbicacion","idlat","idlong","a","lat","long","navigator","geolocation","getCurrentPosition","location","innerText","coords","latitude","longitude","error","AvisoError","ComboMeses","ComboAnio","getFecha","f","Date","d","getDate","m","getUTCMonth","getMonth","D","MA","getFullYear","devuelveFecha","idInputFecha","fe","getUTCDate","exportTableToExcel","tableID","downloadLink","filename","dataType","tableSelect","tableHTML","outerHTML","createElement","body","appendChild","msSaveOrOpenBlob","blob","Blob","type","href","download","click","getHora","hoy","hora","getHours","minuto","getMinutes","gotoGoogleMaps","open","ViewLoading","props","menu","React","createRef","state","empresas","loading","className","Component","CardsEmpresas","this","setState","axios","get","then","res","data","recordset","catch","map","r","onClick","seleccionarempresa","EMPNIT","src","width","height","NOMBRE","VENTAS","COSTO","UTILIDAD","MARGEN","GraficaPieEmpresas","label","valor","bgColor","push","Number","piedata","labels","datasets","backgroundColor","borderWidth","options","legend","position","evt","element","chart","legendItems","item","index","$context","dataIndex","console","log","text","parsed","GraficaMarcas","getTblMarcas","marcas","universo","tblMarcas","clientesMarca","DESMARCA","TOTALPRECIO","bardata","indexAxis","GraficaEmpresasFacDev","tblEmpresas","CODSUCURSAL","ViewInicio","onLogout","vista","onGetMenu","opcion","onGetEmpresa","empnit","toggleMenu","css","title","GetViewLogin","user","pass","login","bind","ref","placeholder","id","current","ButtonHome","setBack","api","ViewAnalisisEmpresa","getDataMarca","codmarca","desmarca","chartvisible","getMarcaDetalles","marcafechas","marcamunicipios","marcavendedores","clientesmarca","universoclientesmarca","CONTEO","tblMarcaMunicipios","tblMarcaVendedores","tblMarcaFechas","dataM","CODMARCA","labelpie","valorpie","bgColorpie","MUNICIPIO","TIPO","ViewAnalisisMarcas","socket","io","connect","ClassNavegar","setEmpnit","setVista","emit","on","usuario","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.91a58083.chunk.js","sourcesContent":["const funciones = {\r\n    rand:()=>{\r\n        return Math.floor(Math.random() * 255)\r\n    },\r\n    getApiUrl:()=>{\r\n        return 'https://mercadosefectivos-bi-api.herokuapp.com';\r\n    },\r\n    setMoneda: function(num,signo) {\r\n        num = num.toString().replace(/\\$|\\,/g, '');\r\n        if (isNaN(num)) num = \"0\";\r\n        let sign = (num == (num = Math.abs(num)));\r\n        num = Math.floor(num * 100 + 0.50000000001);\r\n        let cents = num % 100;\r\n        num = Math.floor(num / 100).toString();\r\n        if (cents < 10) cents = \"0\" + cents;\r\n        for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3); i++)\r\n            num = num.substring(0, num.length - (4 * i + 3)) + ',' + num.substring(num.length - (4 * i + 3));\r\n        return (((sign) ? '' : '-') + signo + ' ' + num + ((cents == \"00\") ? '' : '.' + cents)).toString();\r\n    },\r\n    setPorcentaje: function(num,signo) {\r\n        num = num.toString().replace(/\\$|\\,/g, '');\r\n        if (isNaN(num)) num = \"0\";\r\n        let sign = (num == (num = Math.abs(num)));\r\n        num = Math.floor(num * 100 + 0.50000000001);\r\n        let cents = num % 100;\r\n        num = Math.floor(num / 100).toString();\r\n        if (cents < 10) cents = \"0\" + cents;\r\n        for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3); i++)\r\n            num = num.substring(0, num.length - (4 * i + 3)) + ',' + num.substring(num.length - (4 * i + 3));\r\n        return (((sign) ? '' : '-') + ' ' + num + ((cents == \"00\") ? '' : '.' + cents)).toString() + signo;\r\n    },\r\n    hablar: function(msn){\r\n        var utterance = new SpeechSynthesisUtterance(msn);\r\n        return window.speechSynthesis.speak(utterance); \r\n    },\r\n    FiltrarTabla: function(idTabla,idfiltro){\r\n        var tableReg = document.getElementById(idTabla);\r\n        let filtro = document.getElementById(idfiltro).value;\r\n    \r\n        var searchText = filtro.toLowerCase();\r\n          var cellsOfRow=\"\";\r\n          var found=false;\r\n          var compareWith=\"\";\r\n       \r\n          // Recorremos todas las filas con contenido de la tabla\r\n            for (var i = 1; i < tableReg.rows.length; i++)\r\n                    {\r\n                      cellsOfRow = tableReg.rows[i].getElementsByTagName('td');\r\n                        found = false;\r\n                        // Recorremos todas las celdas\r\n                        for (var j = 0; j < cellsOfRow.length && !found; j++)\r\n                        {\r\n                          compareWith = cellsOfRow[j].innerHTML.toLowerCase();\r\n                          // Buscamos el texto en el contenido de la celda\r\n                          if (searchText.length == 0 || (compareWith.indexOf(searchText) > -1))\r\n                          {\r\n                              found = true;\r\n                          }\r\n                      }\r\n                      if(found)\r\n                      {\r\n                          tableReg.rows[i].style.display = '';\r\n                      } else {\r\n                          // si no ha encontrado ninguna coincidencia, esconde la\r\n                          // fila de la tabla\r\n                          tableReg.rows[i].style.display = 'none';\r\n                      }\r\n                  }\r\n            //funciones.scrollUp(1000, 'easing');\r\n        },\r\n        OcultarRows: function(idTabla){\r\n        var tableReg = document.getElementById(idTabla);\r\n            // Recorremos todas las filas con contenido de la tabla\r\n            for (var i = 1; i < tableReg.rows.length; i++)\r\n            {\r\n                if(i>15){\r\n                    tableReg.rows[i].style.display = 'none';\r\n                }\r\n            }\r\n        },\r\n        ObtenerUbicacion: async(idlat,idlong)=>{\r\n            let lat = document.getElementById(idlat);\r\n            let long = document.getElementById(idlong);\r\n            \r\n            try {\r\n                navigator.geolocation.getCurrentPosition(function (location) {\r\n                    lat.innerText = location.coords.latitude.toString();\r\n                    long.innerText = location.coords.longitude.toString();\r\n                })\r\n            } catch (error) {\r\n                funciones.AvisoError(error.toString());\r\n            }\r\n        },\r\n        ComboMeses: ()=>{\r\n            let str =`<option value='1'>Enero</option>\r\n                      <option value='2'>Febrero</option>\r\n                      <option value='3'>Marzo</option>\r\n                      <option value='4'>Abril</option>\r\n                      <option value='5'>Mayo</option>\r\n                      <option value='6'>Junio</option>\r\n                      <option value='7'>Julio</option>\r\n                      <option value='8'>Agosto</option>\r\n                      <option value='9'>Septiembre</option>\r\n                      <option value='10'>Octubre</option>\r\n                      <option value='11'>Noviembre</option>\r\n                      <option value='12'>Diciembre</option>`\r\n            return str;\r\n            },\r\n            ComboAnio: ()=>{\r\n            let str =`<option value='2017'>2017</option>\r\n                      <option value='2018'>2018</option>\r\n                      <option value='2019'>2019</option>\r\n                      <option value='2020'>2020</option>\r\n                      <option value='2021'>2021</option>\r\n                      <option value='2022'>2022</option>\r\n                      <option value='2023'>2023</option>\r\n                      <option value='2024'>2024</option>\r\n                      <option value='2025'>2025</option>\r\n                      <option value='2026'>2026</option>\r\n                      <option value='2027'>2027</option>\r\n                      <option value='2028'>2028</option>\r\n                      <option value='2029'>2029</option>\r\n                      <option value='2030'>2030</option>`\r\n            return str;\r\n            },\r\n            getFecha(){\r\n              let fecha\r\n              let f = new Date(); \r\n              let d = f.getDate(); \r\n              let m = f.getUTCMonth()+1; \r\n        \r\n              switch (d.toString()) {\r\n                case '30':\r\n                  m = f.getMonth()+1; \r\n                  break;\r\n                case '31':\r\n                  m = f.getMonth()+1; \r\n                    break;\r\n              \r\n                default:\r\n        \r\n                  break;\r\n              }\r\n        \r\n              \r\n              let y = f.getFullYear();\r\n             \r\n              let di = d;\r\n              var D = '0' + di;\r\n              let DDI \r\n              if(D.length==3){DDI=di}else{DDI=D}\r\n              \r\n              let ma = m;\r\n              var MA = '0' + ma;\r\n              let DDM \r\n              if(MA.length==3){DDM=ma}else{DDM=MA}\r\n        \r\n        \r\n              fecha = y + '-' + DDM + '-' + DDI;\r\n              return fecha;\r\n            },\r\n            devuelveFecha: (idInputFecha)=>{\r\n                let fe = new Date(document.getElementById(idInputFecha).value);\r\n                let ae = fe.getFullYear();\r\n                let me = fe.getUTCMonth()+1;\r\n                let de = fe.getUTCDate() \r\n                let fret = ae + '-' + me + '-' + de;\r\n                return fret;\r\n              },\r\n\r\n              exportTableToExcel: (tableID, filename = '')=>{\r\n                var downloadLink;\r\n                var dataType = 'application/vnd.ms-excel;charset=UTF-8';\r\n                var tableSelect = document.getElementById(tableID);\r\n                var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');\r\n                \r\n                // Specify file name\r\n                filename = filename?filename+'.xls':'excel_data.xlsx';\r\n                \r\n                // Create download link element\r\n                downloadLink = document.createElement(\"a\");\r\n                \r\n                document.body.appendChild(downloadLink);\r\n                \r\n                if(navigator.msSaveOrOpenBlob){\r\n                    var blob = new Blob(['ufeff', tableHTML], {\r\n                        type: \"text/plain;charset=utf-8;\"//dataType\r\n                    });\r\n                    navigator.msSaveOrOpenBlob( blob, filename);\r\n                }else{\r\n                    // Create a link to the file\r\n                    downloadLink.href = 'data:' + dataType + ', ' + tableHTML;\r\n                \r\n                    // Setting the file name\r\n                    downloadLink.download = filename;\r\n                    \r\n                    //triggering the function\r\n                    downloadLink.click();\r\n                }\r\n              },\r\n              getHora:()=>{\r\n                let hoy = new Date();\r\n                let hora = hoy.getHours();\r\n                let minuto = hoy.getMinutes();\r\n                return `${hora.toString()}:${minuto.toString()}`;\r\n              },\r\n              gotoGoogleMaps:(lat,long)=>{\r\n                window.open(`https://www.google.com/maps?q=${lat},${long}`);\r\n              }\r\n}\r\n\r\n\r\nexport default funciones;","import React, {Component} from 'react';\r\n\r\nclass ViewLoading extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.menu = React.createRef()\r\n        this.state = {\r\n            empresas: [],\r\n            menu:'circular-menu',\r\n            loading:false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h3 className=\"text-info\">\r\n                    <i className=\"fas fa-spinner fa-spin\"></i>  Cargando datos...\r\n                </h3>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ViewLoading;","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport funciones from '../../funciones';\r\nimport ViewLoading from '../../partials/partialLoading';\r\n\r\nlet api = 'https://mercadosefectivos-bi-api.herokuapp.com';\r\n\r\nclass CardsEmpresas extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            empresas: [],\r\n            loading:false\r\n        };\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        this.setState({\"loading\":true});\r\n\r\n        axios.get(`${api}/empresas/getempresas`)\r\n        .then(res => {\r\n          const empresas = res.data.recordset;\r\n          //console.log(empresas);\r\n          this.setState({\"empresas\": empresas,\"loading\":false});\r\n          //return empresas;\r\n        })\r\n        .catch(()=>{\r\n            //return [];\r\n            this.setState({\"loading\":false});\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n        if(this.state.loading==true){\r\n            return(<ViewLoading />)\r\n        }else{\r\n            return (\r\n                <div className=\"row\">\r\n                    {this.state.empresas.map((r)=>{\r\n                        let strclass = \"card border-top-rounded border-bottom-rounded shadow hand p-10 mb-3 px-3 text-secondary border-secondary \"\r\n                        return (<div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\" key={r.EMPNIT}>\r\n                                    <div className={strclass} onClick={ ()=>{this.props.seleccionarempresa(r.EMPNIT)}}>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-3\">\r\n                                                    <img src={'../favicon.png'} width=\"50\" height=\"50\"></img>\r\n                                                </div>\r\n                                                <div className=\"col-9\">\r\n                                                    <br></br>\r\n                                                    <h3 className=\"text-secondary\">{r.NOMBRE}</h3>\r\n                                                \r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"row border-bottom border-gris\">\r\n                                                <div className=\"col-4\">\r\n                                                    <label>Ventas:</label>\r\n                                                </div>\r\n                                                <div className=\"col-8\">\r\n                                                    <label><b>{funciones.setMoneda(r.VENTAS,'Q')}</b></label>    \r\n                                                </div>\r\n                                            </div>\r\n                                        \r\n                                            <div className=\"row border-bottom border-gris\">\r\n                                                <div className=\"col-4\">\r\n                                                    <label>Costo:</label>\r\n                                                </div>\r\n                                                <div className=\"col-8\">\r\n                                                    <label><b>{funciones.setMoneda(r.COSTO,'Q')}</b></label>    \r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"row border-bottom border-gris\">\r\n                                                <div className=\"col-4\">\r\n                                                    <label>Utilidad:</label>\r\n                                                </div>\r\n                                                <div className=\"col-8\">\r\n                                                    <label><b>{funciones.setMoneda(r.UTILIDAD,'Q')}</b>  (<b className=\"text-danger\">{funciones.setPorcentaje(r.MARGEN,'%')}</b>)</label>\r\n\r\n                                                </div>\r\n                                            \r\n                                                \r\n                                            </div>\r\n                                                <i className=\"fas fa-hand-point-up\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>)\r\n                    })}\r\n                </div>\r\n                )\r\n        }\r\n    }    \r\n}\r\n\r\nexport default CardsEmpresas;","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport funciones from '../../funciones';\r\nimport ViewLoading from '../../partials/partialLoading';\r\nimport  { Pie } from 'react-chartjs-2';\r\n\r\n\r\nlet api = 'https://mercadosefectivos-bi-api.herokuapp.com';\r\n\r\nclass GraficaPieEmpresas extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            empresas: [],\r\n            loading:false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\"loading\":true});\r\n\r\n        axios.get(`${api}/empresas/getempresas`)\r\n        .then(res => {\r\n          const empresas = res.data.recordset;\r\n          //console.log(empresas);\r\n          this.setState({\"empresas\": empresas,\"loading\":false});\r\n          //return empresas;\r\n        })\r\n        .catch(()=>{\r\n            //return [];\r\n            this.setState({\"loading\":false});\r\n        })\r\n\r\n    }\r\n    rand = () => {\r\n        return Math.floor(Math.random() * 255)\r\n    };\r\n\r\n    render(){\r\n        let label = []; let valor = []; let bgColor = []; let i =0;\r\n        let data = this.state.empresas;\r\n        data.map((r)=>{\r\n                label.push(r.EMPNIT);\r\n                valor.push(Number(r.VENTAS));\r\n                bgColor.push( `rgb(${funciones.rand()}, ${funciones.rand()}, ${funciones.rand()})`)\r\n        })\r\n        let piedata = {\r\n            labels: label,\r\n            datasets: [\r\n              {\r\n                data:valor,\r\n                backgroundColor:bgColor,\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n        };\r\n        \r\n        if(this.state.loading==true){\r\n            return(<ViewLoading />);\r\n        }else{\r\n            return (\r\n                <div height=\"400\" >\r\n\r\n                    <h5>Ventas Brutas por Empresa</h5> \r\n                    <Pie height={400} data={piedata} options={{\r\n                                    legend: {\r\n                                    display: true,\r\n                                    position: \"right\"\r\n                                    },\r\n                                    onClick: function(evt, element) {\r\n                                        //console.log(evt.chart);\r\n                                        try {\r\n                                            evt.chart.legend.legendItems.map((item) => {\r\n                                                if(item.index==element[0].element.$context.dataIndex){\r\n                                                    console.log(item.text);\r\n                                                    console.log(element[0].element.$context.parsed)  \r\n                                                }\r\n                                            })\r\n                                            //console.log(element[0].element.$context.dataIndex)\r\n                                            //console.log(element[0].element.$context.parsed)  \r\n                                        } catch (error) {\r\n                                            \r\n                                        }\r\n                                    \r\n                                    }\r\n                    }}/>\r\n                </div>\r\n                )\r\n        }    \r\n    }\r\n}\r\n\r\nexport default GraficaPieEmpresas;","\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport funciones from '../../funciones';\r\nimport ViewLoading from '../../partials/partialLoading';\r\n\r\nlet api = 'https://mercadosefectivos-bi-api.herokuapp.com';\r\n\r\n\r\n\r\n\r\nexport default class GraficaMarcas extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           loading: false,\r\n           universo:0,\r\n           tblMarcas:[],\r\n           clientesMarca:0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTblMarcas();\r\n    }\r\n\r\n    getTblMarcas=()=>{\r\n        this.setState({\"loading\":true});\r\n\r\n        axios.get(`${api}/marcas/getmarcas?empnit=todos&anio=${2021}&mes=${9}`)\r\n        .then(res => {\r\n          const marcas = res.data.recordset;\r\n          this.setState({\"tblMarcas\": marcas,\"loading\":false});\r\n        })\r\n        .catch(()=>{\r\n            this.setState({\"tblMarcas\": [],\"loading\":false});\r\n        })\r\n    }\r\n\r\n    render() {\r\n       \r\n            let label = []; let valor = []; let bgColor = []; \r\n            let data = this.state.tblMarcas;\r\n            try {\r\n                data.map((r)=>{\r\n                    label.push(r.DESMARCA);\r\n                    valor.push(Number(r.TOTALPRECIO));\r\n                    bgColor.push( `rgb(${funciones.rand()}, ${funciones.rand()}, ${funciones.rand()})`)\r\n            })    \r\n            } catch (error) {\r\n                \r\n            }\r\n            \r\n            let bardata = {\r\n                labels: label,\r\n                datasets: [\r\n                {\r\n                    data:valor,\r\n                    backgroundColor:bgColor,\r\n                    borderWidth: 1,\r\n                },\r\n                ],\r\n            };\r\n\r\n            if(this.state.loading==false){\r\n                return(\r\n                <div>\r\n                    <h5>Ventas por Marca</h5>\r\n                    <Bar height={400} data={bardata} \r\n                    options={{\r\n                                indexAxis:'y',\r\n                                legend: {\r\n                                display: true,\r\n                                position: \"right\"\r\n                            },\r\n                            onClick: function(evt, element) {\r\n                                    //console.log(evt.chart);\r\n                                    try {\r\n                                        evt.chart.legend.legendItems.map((item) => {\r\n                                            if(item.index==element[0].element.$context.dataIndex){\r\n                                                console.log(item.text);\r\n                                                console.log(element[0].element.$context.parsed)  \r\n                                            }\r\n                                        })\r\n                                    } catch (error) {\r\n                                        \r\n                                    }\r\n                                  \r\n                            }\r\n                    }} /> \r\n                </div>         \r\n                    )\r\n            }else{\r\n               return(\r\n                    <ViewLoading />\r\n               )\r\n            }\r\n   \r\n    }\r\n};","\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport funciones from '../../funciones';\r\nimport ViewLoading from '../../partials/partialLoading';\r\n\r\nlet api = 'https://mercadosefectivos-bi-api.herokuapp.com';\r\n\r\n\r\nexport default class GraficaEmpresasFacDev extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           loading: false,\r\n           universo:0,\r\n           tblEmpresas:[],\r\n           clientesMarca:0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTblMarcas();\r\n    }\r\n\r\n    getTblMarcas=()=>{\r\n        this.setState({\"loading\":true});\r\n\r\n        axios.get(`${api}/empresas/getfacdevempresas?anio=${2021}&mes=${9}`)\r\n        .then(res => {\r\n          const empresas = res.data.recordset;\r\n          this.setState({\"tblEmpresas\": empresas,\"loading\":false});\r\n        })\r\n        .catch(()=>{\r\n            this.setState({\"tblEmpresas\": [],\"loading\":false});\r\n        })\r\n    }\r\n\r\n    render() {\r\n       \r\n            let label = []; let valor = []; let bgColor = []; \r\n            let data = this.state.tblEmpresas;\r\n            try {\r\n                data.map((r)=>{\r\n                    label.push(r.CODSUCURSAL);\r\n                    valor.push(Number(r.TOTALPRECIO));\r\n                    bgColor.push( `rgb(${funciones.rand()}, ${funciones.rand()}, ${funciones.rand()})`)\r\n            })    \r\n            } catch (error) {\r\n                \r\n            }\r\n            \r\n            let bardata = {\r\n                labels: label,\r\n                datasets: [\r\n                {\r\n                    data:valor,\r\n                    backgroundColor:bgColor,\r\n                    borderWidth: 1,\r\n                },\r\n                ],\r\n            };\r\n\r\n            if(this.state.loading==false){\r\n                return(\r\n                <div>\r\n                    <h5>Ventas/Devoluciones por Empresa</h5>\r\n                    <Bar height={400} data={bardata} \r\n                    options={{\r\n                                indexAxis:'x',\r\n                                legend: {\r\n                                display: true,\r\n                                position: \"bottom\"\r\n                            },\r\n                            onClick: function(evt, element) {\r\n                                    //console.log(evt.chart);\r\n                                    try {\r\n                                        evt.chart.legend.legendItems.map((item) => {\r\n                                            if(item.index==element[0].element.$context.dataIndex){\r\n                                                console.log(item.text);\r\n                                                console.log(element[0].element.$context.parsed)  \r\n                                            }\r\n                                        })\r\n                                    } catch (error) {\r\n                                        \r\n                                    }\r\n                                  \r\n                            }\r\n                    }} /> \r\n                </div>         \r\n                    )\r\n            }else{\r\n               return(\r\n                    <ViewLoading />\r\n               )\r\n            }\r\n   \r\n    }\r\n};","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport funciones from '../funciones';\r\nimport ViewLoading from '../partials/partialLoading';\r\nimport CardsEmpresas from './Graficas/cardsEmpresas';\r\nimport GraficaPieEmpresas from './Graficas/graficaEmpresas';\r\nimport GraficaMarcas from './Graficas/graficaMarcas';\r\nimport GraficaEmpresasFacDev from './Graficas/graficaEmpresasFacDev';\r\n\r\nlet api = 'https://mercadosefectivos-bi-api.herokuapp.com';\r\n\r\nclass ViewInicio extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        //this.menu = React.createRef()\r\n     \r\n        this.state = {\r\n            empresas: [],\r\n            menu:'circular-menu',\r\n            loading:false\r\n        };\r\n    }\r\n    //this.props.usuario\r\n    onLogout = () => {\r\n        this.props.vista(\"LOGIN\");\r\n    }\r\n\r\n    onGetMenu = (opcion)=>{\r\n        this.props.vista(opcion);\r\n    }\r\n\r\n    onGetEmpresa= (empnit) => {\r\n        this.props.empnit(empnit);\r\n        this.props.vista('ANALISIS_EMPRESA');\r\n    }\r\n   \r\n    toggleMenu=()=> {\r\n        var css = ''\r\n        if(this.state.menu===\"circular-menu\"){\r\n            css=\"circular-menu active\"\r\n        }else{\r\n            css=\"circular-menu\"\r\n        };\r\n        this.setState({\"menu\":css});\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n\r\n    }\r\n\r\n    render(){\r\n        \r\n        if(this.state.loading==true){\r\n            return(<ViewLoading />);\r\n        }else{\r\n            return (\r\n            <div>\r\n                    <div className='row'>\r\n                        <div className=\"col-sm-6 col-md-6 col-lg-4 col-xl-4\">\r\n                            <div className=\"card shadow p-4 border-top-rounded border-bottom-rounded\">\r\n                                <GraficaPieEmpresas data={this.state.empresas} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6 col-md-6 col-lg-4 col-xl-4\">\r\n                            <div className=\"card shadow p-4 border-top-rounded border-bottom-rounded\">\r\n                                <GraficaMarcas data={[]} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6 col-md-6 col-lg-4 col-xl-4\">\r\n                            <div className=\"card shadow p-4 border-top-rounded border-bottom-rounded\">\r\n                                <GraficaEmpresasFacDev />\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n\r\n                    <CardsEmpresas seleccionarempresa={this.onGetEmpresa} />\r\n\r\n                    <div className={this.state.menu}>\r\n                        <a className=\"floating-btn\" onClick={()=>{this.toggleMenu()}}>\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </a>\r\n                        <menu className=\"items-wrapper\">\r\n                            <a href=\"#\" \r\n                                data-toggle=\"tooltip\" data-placement=\"left\" title=\"Análisis de Productos\" \r\n                                className=\"menu-item  fas fa-box\" \r\n                                onClick={()=>{this.onGetMenu(\"ANALISIS_PRODUCTOS\")}}>P</a>\r\n                            <a href=\"#\" \r\n                                data-toggle=\"tooltip\" data-placement=\"left\" title=\"Análisis de Marcas\"  \r\n                                className=\"menu-item  fas fa-briefcase\" \r\n                                onClick={()=>{this.onGetMenu(\"ANALISIS_MARCAS\")}}>M</a>\r\n                            <a href=\"#\" \r\n                                data-toggle=\"tooltip\" data-placement=\"left\" title=\"Análisis por Municipio\"  \r\n                                className=\"menu-item  fas fa-map-marker-alt\" \r\n                                onClick={()=>{this.onGetMenu(\"ANALISIS_MAPA\")}}>U</a>\r\n                            <a href=\"#\"\r\n                             data-toggle=\"tooltip\" data-placement=\"left\" title=\"Historial\"  \r\n                             className=\"menu-item  fas fa-chart-line\" \r\n                             onClick={()=>{this.onGetMenu(\"ANALISIS_HISTORICO\")}}>H</a>\r\n                        </menu>\r\n    \r\n                    </div>\r\n                                      \r\n            </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default ViewInicio;","import React, {Component} from 'react';\r\nimport ClassNavegar from '../Navegar';\r\n\r\nclass GetViewLogin extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.user = React.createRef();\r\n        this.pass = React.createRef();\r\n        this.login = this.login.bind(this);\r\n        this.state = {\r\n            vista:\"LOGIN\"            \r\n        }\r\n    }\r\n\r\n    login(){\r\n        //alert(this.user.current.value + ' ' + this.pass.current.value)\r\n        this.setState({vista: \"INICIO\"});\r\n        \r\n    }\r\n\r\n    render() {\r\n        if(this.state.vista=='LOGIN'){\r\n            return (\r\n                <div className=\"card col-sm-12 col-md-4 col-lg-4 col-xl-3 shadow\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group text-center\">\r\n                            <img src={'./favicon.png'} width=\"50\" height=\"50\"></img>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Usuario</label>\r\n                            <input ref={this.user} type=\"text\" className=\"form-control\" placeholder=\"Escriba su Usuario\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Usuario</label>\r\n                            <input ref={this.pass} type=\"password\" className=\"form-control\" placeholder=\"Escriba su Contraseña\" id=\"txtPass\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button className=\"btn btn-info text-white shadow btn-lg\" onClick={this.login}>Ingresar</button>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n        }else{\r\n            return (<ClassNavegar user={this.user.current.value} vista=\"INICIO\" />)\r\n        }\r\n        \r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default GetViewLogin;","import React , {Component} from 'react';\r\n\r\nexport default class ButtonHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n    } \r\n\r\n    setBack = ()=>{\r\n        //this.setState({vista:\"INICIO\"});\r\n        this.props.vista(\"INICIO\");\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <div className=\"circular-menu\">\r\n            <a className=\"floating-btn\" onClick={this.setBack}>\r\n                <i className=\"fas fa-home\"></i>\r\n            </a>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport ButtonHome from '../partials/ButtonHome';\r\nimport funciones from '../funciones';\r\n\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\n\r\nlet api = 'https://mercadosefectivos-bi-api.herokuapp.com';\r\n\r\n\r\n\r\nexport default class ViewAnalisisEmpresa extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           loading: false,\r\n           chartvisible:true,\r\n           codmarca:0,\r\n           desmarca:\"\",\r\n           universo:0,\r\n           tblMarcas:[],\r\n           tblMarcaMunicipios:[],\r\n           tblMarcaVendedores:[],\r\n           tblMarcaFechas:[],\r\n           clientesMarca:0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTblMarcas();\r\n    }\r\n\r\n    getDataMarca=(codmarca,desmarca)=>{\r\n        \r\n\r\n            this.setState({chartvisible:false,codmarca:codmarca,desmarca:desmarca});\r\n           \r\n                this.getMarcaDetalles(codmarca);\r\n         \r\n            \r\n    }\r\n\r\n    getTblMarcas=()=>{\r\n        this.setState({\"loading\":true});\r\n\r\n        axios.get(`${api}/marcas/getmarcas?empnit=${this.props.empnit}&anio=${2021}&mes=${9}`)\r\n        //axios.post(`${api}/getmarcas`, {empnit:this.props.empnit,anio:2021,mes:9})\r\n        .then(res => {\r\n          const marcas = res.data.recordset;\r\n          //console.log(empresas);\r\n          this.setState({\"tblMarcas\": marcas,\"loading\":false});\r\n          //return empresas;\r\n        })\r\n        .catch(()=>{\r\n            //return [];\r\n            this.setState({\"tblMarcas\": [],\"loading\":false});\r\n        })\r\n    }\r\n\r\n    getMarcaDetalles=(codmarca)=>{\r\n       \r\n        this.setState({\"loading\":true});\r\n\r\n        //obtiene marcas por fecha\r\n        axios.get(`${api}/marcas/getmarcasfecha?empnit=${this.props.empnit}&anio=${2021}&mes=${9}&codmarca=${codmarca}`)\r\n        .then(res => {\r\n          const marcafechas = res.data.recordset;\r\n          //console.log(empresas);\r\n          this.setState({\"tblMarcaFechas\": marcafechas,\"loading\":false});\r\n          //return empresas;\r\n        })\r\n        .catch(()=>{\r\n            //return [];\r\n            this.setState({\"tblMarcaFechas\": [],\"loading\":false});\r\n        })\r\n\r\n         //obtiene marcas por municipio\r\n         axios.get(`${api}/marcas/getmarcasmunicipio?empnit=${this.props.empnit}&anio=${2021}&mes=${9}&codmarca=${codmarca}`)\r\n        .then(res => {\r\n        const marcamunicipios = res.data.recordset;\r\n        //console.log(empresas);\r\n        this.setState({\"tblMarcaMunicipios\": marcamunicipios,\"loading\":false});\r\n        //return empresas;\r\n        })\r\n        .catch(()=>{\r\n            //return [];\r\n            this.setState({\"tblMarcaMunicipios\": [],\"loading\":false});\r\n        })\r\n\r\n    \r\n        //obtiene marcas por vendedor\r\n        axios.get(`${api}/marcas/getmarcasvendedor?empnit=${this.props.empnit}&anio=${2021}&mes=${9}&codmarca=${codmarca}`)\r\n        .then(res => {\r\n        const marcavendedores = res.data.recordset;\r\n        //console.log(empresas);\r\n        this.setState({\"tblMarcaVendedores\": marcavendedores,\"loading\":false});\r\n        //return empresas;\r\n        })\r\n        .catch(()=>{\r\n            //return [];\r\n            this.setState({\"tblMarcaVendedores\": [],\"loading\":false});\r\n        })\r\n\r\n\r\n        //obtiene los clientes a quienes se les vendió la marca\r\n        axios.get(`${api}/marcas/getclientesmarca?empnit=${this.props.empnit}&anio=${2021}&mes=${9}&codmarca=${codmarca}`)\r\n        .then(res => {\r\n        const clientesmarca = res.data.recordset;\r\n        //console.log(clientesmarca);\r\n        let universoclientesmarca = 0;\r\n        clientesmarca.map((r)=>{\r\n            universoclientesmarca = Number(r.CONTEO);\r\n        })\r\n        this.setState({\"clientesMarca\": universoclientesmarca,\"loading\":false});\r\n        //return empresas;\r\n        })\r\n        .catch(()=>{\r\n            //return [];\r\n            this.setState({\"clientesMarca\": 0,\"loading\":false});\r\n        })\r\n\r\n\r\n    }\r\n\r\n    setBack =() => {\r\n        this.props.vista(\"INICIO\");\r\n        //this.props.empnit\r\n    }\r\n\r\n    rand = () => {\r\n        return Math.floor(Math.random() * 255)\r\n    };\r\n\r\n    render() {\r\n       \r\n            const dataM = this.state.tblMarcas;\r\n\r\n            let label = []; let valor = []; let bgColor = []; let i =0;\r\n            let data = this.state.tblMarcas;\r\n            data.map((r)=>{\r\n                    label.push(r.DESMARCA);\r\n                    valor.push(Number(r.TOTALPRECIO));\r\n                    bgColor.push( `rgb(${this.rand()}, ${this.rand()}, ${this.rand()})`)\r\n            })\r\n            let bardata = {\r\n                labels: label,\r\n                datasets: [\r\n                {\r\n                    data:valor,\r\n                    backgroundColor:bgColor,\r\n                    borderWidth: 1,\r\n                },\r\n                ],\r\n            };\r\n\r\n            if(this.state.chartvisible==true){\r\n                return(\r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <div className=\"card shadow border-top-rounder\">\r\n                                <h4>{this.props.empnit}</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"card shadow border-top-rounded border-bottom-rounded col-sm-12 col-md-6 col-xl-6 col-lg-6\">\r\n                                <div className=\"card-header\">\r\n                                    <h3>Ventas por Marca</h3>\r\n                                    <button className=\"btn btn-outline-secondary btn-md btn-circle\" onClick={()=>{this.getTblMarcas()}}>\r\n                                        <i className=\"fas fa-sync\"></i>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    \r\n                                    <Bar height={400} data={bardata} options={{\r\n                                indexAxis:'y',\r\n                                legend: {\r\n                                display: true,\r\n                                position: \"right\"\r\n                                },\r\n                                onClick: function(evt, element) {\r\n                                    //console.log(evt.chart);\r\n                                    try {\r\n                                        evt.chart.legend.legendItems.map((item) => {\r\n                                            if(item.index==element[0].element.$context.dataIndex){\r\n                                                console.log(item.text);\r\n                                                console.log(element[0].element.$context.parsed)  \r\n                                            }\r\n                                        })\r\n                                        //console.log(element[0].element.$context.dataIndex)\r\n                                        //console.log(element[0].element.$context.parsed)  \r\n                                    } catch (error) {\r\n                                        \r\n                                    }\r\n                                  \r\n                                }\r\n                            }} />\r\n                       \r\n                                   \r\n                                </div>\r\n                            </div> \r\n                            <div className=\"card shadow border-top-rounded border-bottom-rounded col-sm-12 col-md-6 col-xl-6 col-lg-6\">\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table table-hover \">\r\n                                        <thead className=\"bg-secondary text-white \">\r\n                                            <tr>\r\n                                                <td>Marca</td>\r\n                                                <td>Importe</td>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {dataM.map((r)=>{\r\n                                                return(\r\n                                                    <tr className=\"hand\" key={`row-${r.CODMARCA}`} onClick={()=>{this.getDataMarca(r.CODMARCA,r.DESMARCA)}}>\r\n                                                        <td>{r.DESMARCA}</td>\r\n                                                        <td>{funciones.setMoneda(r.TOTALPRECIO,'Q')}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <ButtonHome vista={this.setBack} />    \r\n                        </div>\r\n                        \r\n                    </div>\r\n                    )\r\n            }else{\r\n                //obtengo los valores\r\n                let labelpie = []; let valorpie = []; let bgColorpie = []; //let i =0;\r\n                let data = this.state.tblMarcaMunicipios;\r\n                data.map((r)=>{\r\n                    labelpie.push(r.MUNICIPIO);\r\n                    valorpie.push(Number(r.TOTALPRECIO));\r\n                    bgColorpie.push( `rgb(${this.rand()}, ${this.rand()}, ${this.rand()})`)\r\n                })\r\n                let piedata = {\r\n                    labels: labelpie,\r\n                    datasets: [\r\n                      {\r\n                        data:valorpie,\r\n                        backgroundColor:bgColorpie,\r\n                        borderWidth: 1,\r\n                      },\r\n                    ],\r\n                };\r\n                return(\r\n  \r\n               \r\n                    <div>\r\n           \r\n                        <div className=\"card shadow border-top-rounder\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                                <h3>Detalle de la Marca {this.state.desmarca} ({this.state.codmarca})</h3>\r\n                                <button className=\"btn btn-sm btn-secondary border-white\" onClick={()=>{this.setState({chartvisible:true})}}>\r\n                                   <i className=\"fas fa-arrow-left\"></i>Regresar\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"table-responsive\">\r\n\r\n                                    <table className=\"table table-responsive table hover\">\r\n                                        <thead className=\"negrita\">\r\n                                            <tr>\r\n                                                <td>Municipio</td>\r\n                                                <td>Importe</td>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {\r\n                              \r\n                                            this.state.tblMarcaMunicipios.map((r)=>{\r\n                                                if(r.TIPO=='FAC'){\r\n                                                    return (<tr className=\"hand border-secondary border-bottom\">\r\n                                                                <td>{r.MUNICIPIO}</td>\r\n                                                                <td>{funciones.setMoneda(r.TOTALPRECIO,'Q')}</td>\r\n                                                            </tr>)\r\n                                                }\r\n                                            })\r\n                                            \r\n                                        }\r\n                                     \r\n                                        </tbody>\r\n                                    </table>\r\n                                    <Pie width={100} height={100} data={piedata} options={{\r\n                                            legend: {\r\n                                            display: true,\r\n                                            position: \"right\"\r\n                                            },\r\n                                            onClick: function(evt, element) {\r\n                                                //console.log(evt.chart);\r\n                                                try {\r\n                                                    evt.chart.legend.legendItems.map((item) => {\r\n                                                        if(item.index==element[0].element.$context.dataIndex){\r\n                                                            console.log(item.text);\r\n                                                            console.log(element[0].element.$context.parsed)  \r\n                                                        }\r\n                                                    })\r\n                                                    //console.log(element[0].element.$context.dataIndex)\r\n                                                    //console.log(element[0].element.$context.parsed)  \r\n                                                } catch (error) {\r\n                                                    \r\n                                                }\r\n                                            \r\n                                            }\r\n                                        }}/>\r\n                                </div>\r\n                                    \r\n                            </div>\r\n                        </div> \r\n                        <ButtonHome vista={this.setBack} />\r\n                    </div>\r\n                    )\r\n            }\r\n   \r\n    }\r\n};","import React from 'react';\r\nimport ButtonHome from '../partials/ButtonHome';\r\n\r\nexport default class ViewAnalisisMarcas extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tblMarcas:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    setBack = () => {\r\n        this.props.vista(\"INICIO\");\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h3>Análisis por Marcas</h3>\r\n            <ButtonHome vista={this.setBack} />            \r\n            </div>)\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport ViewInicio from './views/viewInicio';\r\nimport ViewLogin from './views/viewLogin';\r\nimport ViewAnalisisEmpresa from './views/viewAnalisisEmpresa';\r\nimport ViewAnalisisMarcas from './views/viewAnalisisMarcas';\r\n\r\nimport io from \"socket.io-client\";\r\nconst socket = io.connect('/');\r\n\r\nclass ClassNavegar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.setVista = this.setVista.bind(this);\r\n        this.state = {\r\n            vista:this.props.vista,\r\n            empnit:this.props.empnit            \r\n        }\r\n     \r\n    }\r\n\r\n\r\n    setVista(vista){\r\n        socket.emit(\"vista\", vista);\r\n        this.setState({vista:vista})\r\n    }\r\n\r\n    setEmpnit = (empnit)=>{\r\n        this.setState({empnit:empnit})\r\n    }\r\n\r\n    componentDidMount() {\r\n        socket.on(\"vista\", (vista)=>{\r\n            this.setVista(vista);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        switch (this.state.vista) {\r\n            case 'LOGIN':\r\n                return (<ViewLogin usuario=\"\" />)    \r\n                break;\r\n            case 'INICIO': \r\n                return(<ViewInicio usuario={this.props.user} vista={this.setVista} empnit={this.setEmpnit} />)\r\n                break;\r\n            case 'ANALISIS_EMPRESA':\r\n                return(<ViewAnalisisEmpresa empnit={this.state.empnit} vista={this.setVista} />)\r\n                break;\r\n            case 'ANALISIS_PRODUCTOS':\r\n                return(<h2>Navegando a PRODUCTOS</h2>);\r\n                break;\r\n            case 'ANALISIS_MARCAS':\r\n                return(<ViewAnalisisMarcas vista={this.setVista} />);\r\n                break;    \r\n            case 'ANALISIS_MAPA':\r\n                return(<h2>'Navegando a MAPA'</h2>);\r\n                break;    \r\n            case 'ANALISIS_HISTORICO':\r\n                return(<h2>'Navegando a HISTORICO'</h2>);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }       \r\n    }\r\n}\r\n\r\n\r\nexport default ClassNavegar;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport ClassNavegar from './Navegar';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ClassNavegar vista=\"LOGIN\" />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}